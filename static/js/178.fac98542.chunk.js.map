{"version":3,"file":"static/js/178.fac98542.chunk.js","mappings":"kOACA,EAA0B,wBAA1B,EAAiE,6B,SC2FjE,EA/DyB,WACvB,IAAAA,GAA4BC,EAAAA,EAAAA,UAAsB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAkCL,EAAAA,EAAAA,WAAkB,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnDE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,UAAwB,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAhDE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEtBG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAb,EAAAA,EAAAA,GAAAW,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAQF,EAAaG,IAAI,SAoC/B,OA7BAC,EAAAA,EAAAA,YAAU,WAAO,IAADC,EACd,GAAKH,EAAL,EAEgB,YAAAG,EAAAA,IAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACE,OAAnBtB,GAAa,GAAMoB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGEC,EAAAA,EAAUC,iBAAiBd,GAAO,KAAD,EAA1C,IAAJQ,EAAIE,EAAAK,OAG2B,IAAxBP,EAAKQ,QAAQC,OAAY,CAAAP,EAAAE,KAAA,QAGlC,OAFFlB,EACE,iFACAgB,EAAAQ,OAAA,iBAIJhC,EAAUsB,EAAKQ,SAASN,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAExBU,QAAQC,IAAGX,EAAAS,IACXzB,EAAS,iDAAiD,QAEtC,OAFsCgB,EAAAC,KAAA,GAE1DrB,GAAa,GAAOoB,EAAAY,OAAA,6BAAAZ,EAAAa,OAAA,GAAAhB,EAAA,0BAEvBiB,MAAA,KAAAC,UAAA,CAEDC,EAzBkB,CA0BpB,GAAG,CAAC1B,KAGF2B,EAAAA,EAAAA,KAAA,WAASC,UAAWC,EAAYC,UAC9BC,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAF,SAAA,EACRH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBE,SAAC,mBAChCH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAoBC,UAClCH,EAAAA,EAAAA,KAACM,EAAAA,GAAU,CAACC,SAvCO,SAAClC,GAC1BN,EAAS,MACTK,EAAgB,CAAEC,MAAAA,GACpB,MAsCOX,IAAasC,EAAAA,EAAAA,KAACQ,EAAAA,GAAO,IACrB1C,IAASkC,EAAAA,EAAAA,KAACS,EAAAA,GAAY,CAACC,KAAK,QAAQC,QAAS7C,KAC5CA,GAA2B,IAAlBR,EAAOgC,SAChBU,EAAAA,EAAAA,KAACS,EAAAA,GAAY,CACXC,KAAK,OACLC,QAAQ,+DAGV7C,GAA2B,IAAlBR,EAAOgC,SAAgBU,EAAAA,EAAAA,KAACY,EAAAA,GAAS,CAACtD,OAAQA,QAI7D,C","sources":["webpack://ts-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Movies_section__bjPDA\",\"form-wrapper\":\"Movies_form-wrapper__YIIZB\"};","import { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport {\n  Container,\n  FallbackView,\n  MovieList,\n  SearchForm,\n  Spinner,\n} from \"src/components\";\nimport { moviesAPI } from \"src/services/moviesAPI\";\nimport css from \"./Movies.module.css\";\n\ntype MovieType = {\n  title: string;\n  original_title: string;\n  overview: string;\n  backdrop_path: string;\n  poster_path: string;\n  release_date: string;\n  id: number;\n  media_type: string;\n  original_language: string;\n  popularity: number;\n  vote_average: number;\n  vote_count: number;\n  genre_ids: number[];\n  [key: string]: unknown;\n};\n\nconst Movies: React.FC = () => {\n  const [movies, setMovies] = useState<MovieType[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n\n  const onSearchFormSubmit = (query: string) => {\n    setError(null);\n    setSearchParams({ query });\n  };\n\n  useEffect(() => {\n    if (!query) return;\n\n    const loadMovies = async () => {\n      setIsLoading(true);\n\n      try {\n        const data = await moviesAPI.getMoviesByQuery(query);\n        // console.log(data);\n\n        if (!data || data.results.length === 0) {\n          setError(\n            \"Movies with this query weren't found. Please enter valid query and try again!\"\n          );\n          return;\n        }\n\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n        setError(\"Something went wrong. Please try again later!\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadMovies();\n  }, [query]);\n\n  return (\n    <section className={css.section}>\n      <Container>\n        <h1 className=\"visually-hidden\">Search movies</h1>\n        <div className={css[\"form-wrapper\"]}>\n          <SearchForm onSubmit={onSearchFormSubmit} />\n        </div>\n        {isLoading && <Spinner />}\n        {error && <FallbackView type=\"error\" message={error} />}\n        {!error && movies.length === 0 && (\n          <FallbackView\n            type=\"init\"\n            message=\"There are no movies yet. Enter your query to find some...\"\n          />\n        )}\n        {!error && movies.length !== 0 && <MovieList movies={movies} />}\n      </Container>\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","useEffect","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","moviesAPI","getMoviesByQuery","sent","results","length","abrupt","t0","console","log","finish","stop","apply","arguments","loadMovies","_jsx","className","css","children","_jsxs","Container","SearchForm","onSubmit","Spinner","FallbackView","type","message","MovieList"],"sourceRoot":""}