{"version":3,"file":"static/js/178.70c03a00.chunk.js","mappings":"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","sources":["webpack://ts-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Movies_section__bjPDA\",\"form-wrapper\":\"Movies_form-wrapper__YIIZB\"};","import { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useLangState } from \"src/hooks\";\nimport { moviesAPI } from \"src/services/moviesAPI\";\nimport {\n  Container,\n  FallbackView,\n  LoadMoreBtn,\n  MovieList,\n  SearchForm,\n  Spinner,\n} from \"src/components\";\nimport { toast } from \"react-toastify\";\nimport css from \"./Movies.module.css\";\n\ntype MovieType = {\n  title: string;\n  original_title: string;\n  overview: string;\n  backdrop_path: string;\n  poster_path: string;\n  release_date: string;\n  id: number;\n  media_type: string;\n  original_language: string;\n  popularity: number;\n  vote_average: number;\n  vote_count: number;\n  genre_ids: number[];\n  [key: string]: unknown;\n};\n\nconst Movies: React.FC = () => {\n  const [movies, setMovies] = useState<MovieType[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const { lang } = useLangState();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n  const [page, setPage] = useState<number>(1);\n  const [totalPages, setTotalPages] = useState<number>(0);\n  const [totalResults, setTotalResults] = useState<number>(0);\n\n  const cleanState = () => {\n    setMovies([]);\n    setPage(1);\n    setTotalPages(0);\n    setTotalResults(0);\n    setError(null);\n  };\n\n  const onSearchFormSubmit = (query: string) => {\n    cleanState();\n    setSearchParams({ query });\n  };\n\n  useEffect(() => {\n    if (!query) return;\n\n    const loadMovies = async () => {\n      setIsLoading(true);\n\n      try {\n        const data = await moviesAPI.getMoviesByQuery({\n          query,\n          language: lang,\n          page,\n        });\n        // console.log(data);\n\n        if (!data || data.results.length === 0) {\n          const errorMessage =\n            lang === \"en-US\"\n              ? \"Movies with this query weren't found. Please enter valid query and try again!\"\n              : \"Фільмів за даним запитом не знайдено. Будь ласка, введіть валідний запит та спробуйте знову!\";\n          setError(errorMessage);\n          return;\n        }\n\n        const { results, total_pages, total_results } = data;\n\n        setMovies((prevMovies) => {\n          // Additional filter-operation to prevent response movie-items duplication inside main array:\n          const filteredResults = results.filter((item) => {\n            return prevMovies.map(({ id }) => id).indexOf(item.id) === -1;\n          });\n\n          return [...prevMovies, ...filteredResults];\n        });\n\n        if (totalPages !== total_pages) setTotalPages(total_pages);\n\n        if (totalResults !== total_results) {\n          const message =\n            lang === \"en-US\"\n              ? `Number of successful search results: ${total_results}!`\n              : `Кількість успішних результатів пошуку: ${total_results}!`;\n\n          toast.success(message);\n          setTotalResults(total_results);\n        }\n      } catch (error) {\n        console.log(error);\n        const errorMessage =\n          lang === \"en-US\"\n            ? \"Something went wrong. Please try again later!\"\n            : \"Щось пішло не так... Будь ласка, повторіть спробу пізніше!\";\n        setError(errorMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadMovies();\n  }, [lang, page, query, totalPages, totalResults]);\n\n  const handleLoadMore = () => {\n    setPage((prevPage) => prevPage + 1);\n  };\n\n  const defaultFallbackMessage: string =\n    lang === \"en-US\"\n      ? \"There are no movies yet. Enter your query to find some...\"\n      : \"Наразі фільми відсутні. Введіть Ваш запит для пошуку...\";\n\n  return (\n    <section className={css.section}>\n      <Container>\n        <h1 className=\"visually-hidden\">\n          {lang === \"en-US\" ? \"Search movies\" : \"Пошук фільмів\"}\n        </h1>\n        <div className={css[\"form-wrapper\"]}>\n          <SearchForm onSubmit={onSearchFormSubmit} />\n        </div>\n        {isLoading && <Spinner />}\n        {error && <FallbackView type=\"error\" message={error} />}\n        {!error && movies.length === 0 && (\n          <FallbackView type=\"init\" message={defaultFallbackMessage} />\n        )}\n        {!error && movies.length > 0 && (\n          <>\n            <MovieList movies={movies} />\n            {page !== totalPages && (\n              <LoadMoreBtn onLoadMore={handleLoadMore} isLoading={isLoading} />\n            )}\n          </>\n        )}\n      </Container>\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","lang","useLangState","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","_useState7","_useState8","page","setPage","_useState9","_useState10","totalPages","setTotalPages","_useState11","_useState12","totalResults","setTotalResults","useEffect","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","results","total_pages","total_results","message","wrap","_context","prev","next","moviesAPI","getMoviesByQuery","language","sent","length","abrupt","prevMovies","filteredResults","filter","item","map","_ref2","id","indexOf","concat","_toConsumableArray","toast","success","t0","console","log","finish","stop","apply","arguments","loadMovies","defaultFallbackMessage","_jsx","className","css","children","_jsxs","Container","SearchForm","onSubmit","Spinner","FallbackView","type","_Fragment","MovieList","LoadMoreBtn","onLoadMore","prevPage"],"sourceRoot":""}