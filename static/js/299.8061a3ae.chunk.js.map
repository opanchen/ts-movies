{"version":3,"file":"static/js/299.8061a3ae.chunk.js","mappings":"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","sources":["webpack://ts-movies/./src/pages/Home/Home.module.css?1370","pages/Home/Home.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Home_section__uZuiO\",\"heading\":\"Home_heading__-DhKF\"};","import { useEffect, useState } from \"react\";\nimport {\n  Container,\n  FallbackView,\n  LoadMoreBtn,\n  MovieList,\n  Spinner,\n} from \"src/components\";\nimport { moviesAPI } from \"src/services/moviesAPI\";\nimport { useLangState } from \"src/hooks\";\nimport css from \"./Home.module.css\";\n\ntype MovieType = {\n  title: string;\n  original_title: string;\n  overview: string;\n  backdrop_path: string;\n  poster_path: string;\n  release_date: string;\n  id: number;\n  media_type: string;\n  original_language: string;\n  popularity: number;\n  vote_average: number;\n  vote_count: number;\n  genre_ids: number[];\n  [key: string]: unknown;\n};\n\ntype MoviesTrending = MovieType[];\n\ntype ErrorType = any | null;\n\nconst Home: React.FC = () => {\n  const [movies, setMovies] = useState<MoviesTrending>([]);\n  const [error, setError] = useState<ErrorType>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [page, setPage] = useState<number>(1);\n  const [totalPages, setTotalPages] = useState<number>(0);\n  const { lang } = useLangState();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setError(null);\n        setIsLoading(true);\n\n        const data = await moviesAPI.getTrending({ language: lang, page });\n\n        if (!data) throw new Error(\"There is no fetched data.\");\n\n        const { results, total_pages } = data;\n\n        setMovies((prevMovies) => {\n          // Additional filter-operation to prevent response movie-items duplication inside main array:\n          const filteredResults = results.filter((item) => {\n            return prevMovies.map(({ id }) => id).indexOf(item.id) === -1;\n          });\n\n          return [...prevMovies, ...filteredResults];\n        });\n\n        if (totalPages !== total_pages) setTotalPages(totalPages);\n\n        // console.log(data);\n      } catch (error) {\n        console.log(error);\n        const errorMessage: string =\n          lang === \"en-US\"\n            ? \"Something went wrong... Please, try again later.\"\n            : \"Щось пішло не так... Будь ласка, повторіть спробу пізніше.\";\n        setError(errorMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [lang, page, totalPages]);\n\n  const handleLoadMore = () => {\n    setPage((prevPage) => prevPage + 1);\n  };\n\n  const headingTextContent: string =\n    lang === \"en-US\" ? \"Popular movies\" : \"Популярні фільми\";\n\n  return (\n    <section className={css.section}>\n      <Container>\n        <h1 className={css.heading}>{headingTextContent}</h1>\n        {isLoading && <Spinner />}\n        {error && <FallbackView type=\"error\" message={error} />}\n        {!error && movies.length > 0 && (\n          <>\n            <MovieList movies={movies} />\n            {page !== totalPages && (\n              <LoadMoreBtn onLoadMore={handleLoadMore} isLoading={isLoading} />\n            )}\n          </>\n        )}\n      </Container>\n    </section>\n  );\n};\n\nexport default Home;\n"],"names":["_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","page","setPage","_useState9","_useState10","totalPages","setTotalPages","lang","useLangState","useEffect","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","results","total_pages","wrap","_context","prev","next","moviesAPI","getTrending","language","sent","Error","prevMovies","filteredResults","filter","item","map","_ref2","id","indexOf","concat","_toConsumableArray","t0","console","log","finish","stop","apply","arguments","fetchData","headingTextContent","_jsx","className","css","children","_jsxs","Container","Spinner","FallbackView","type","message","length","_Fragment","MovieList","LoadMoreBtn","onLoadMore","prevPage"],"sourceRoot":""}