{"version":3,"file":"static/js/163.328280ef.chunk.js","mappings":"qMAmDA,UA3C+B,WAC7B,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAGRE,GAA0BC,EAAAA,EAAAA,UAAwC,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhEI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA0BL,EAAAA,EAAAA,UAAwB,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhDE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCT,EAAAA,EAAAA,WAAkB,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAnDE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAuB9B,OArBAG,EAAAA,EAAAA,YAAU,WAAO,IAADC,EACd,GAAKjB,EAAL,EAEe,YAAAiB,EAAAA,IAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACG,OAAnBX,GAAa,GAAMS,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGEC,EAAAA,EAAUC,WAAW5B,GAAS,KAAD,EAA1CsB,EAAIE,EAAAK,KAEVtB,EAASe,GAAME,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEfO,QAAQC,IAAGR,EAAAM,IACXnB,EAAS,mDAAmD,QAExC,OAFwCa,EAAAC,KAAA,GAE5DV,GAAa,GAAOS,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAb,EAAA,yBAEvBc,MAAA,KAAAC,UAAA,CAEDC,EAjBoB,CAkBtB,GAAG,CAACrC,KAGFsC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACG1B,IAAa2B,EAAAA,EAAAA,KAAA,OAAAD,SAAK,eAClB9B,IAAS+B,EAAAA,EAAAA,KAAA,OAAAD,SAAM9B,IACfJ,IACCgC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAACpC,MAAOA,KACrBmC,EAAAA,EAAAA,KAACE,EAAAA,GAAc,SAKzB,C","sources":["pages/MovieDetails/MovieDetails.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport {\n  // useLocation,\n  useParams,\n} from \"react-router-dom\";\nimport { MovieArticle, MovieExtraInfo } from \"src/components\";\nimport { moviesAPI } from \"src/services/moviesAPI\";\n\nconst MovieDetails: React.FC = () => {\n  const { movieId } = useParams();\n  // const location = useLocation();\n\n  const [movie, setMovie] = useState<{ [key: string]: any } | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const data = await moviesAPI.getDetails(movieId);\n        // console.log(data);\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n        setError(\"Something went wrong... Please try again later.\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n      {movie && (\n        <>\n          <MovieArticle movie={movie} />\n          <MovieExtraInfo />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","moviesAPI","getDetails","sent","t0","console","log","finish","stop","apply","arguments","fetchData","_jsxs","_Fragment","children","_jsx","MovieArticle","MovieExtraInfo"],"sourceRoot":""}