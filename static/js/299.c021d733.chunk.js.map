{"version":3,"file":"static/js/299.c021d733.chunk.js","mappings":"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","sources":["webpack://ts-movies/./src/pages/Home/Home.module.css?1370","pages/Home/Home.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Home_section__uZuiO\",\"heading\":\"Home_heading__-DhKF\"};","import { useEffect, useRef, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Container,\n  FallbackView,\n  LoadMoreBtn,\n  MovieList,\n  Spinner,\n} from \"src/components\";\nimport { moviesAPI } from \"src/services/moviesAPI\";\nimport { useLangState } from \"src/hooks\";\nimport css from \"./Home.module.css\";\n\ntype MovieType = {\n  title: string;\n  original_title: string;\n  overview: string;\n  backdrop_path: string;\n  poster_path: string;\n  release_date: string;\n  id: number;\n  media_type: string;\n  original_language: string;\n  popularity: number;\n  vote_average: number;\n  vote_count: number;\n  genre_ids: number[];\n  [key: string]: unknown;\n};\n\ntype MoviesTrending = MovieType[];\n\ntype ErrorType = any | null;\n\nconst Home: React.FC = () => {\n  const [movies, setMovies] = useState<MoviesTrending>([]);\n  const [error, setError] = useState<ErrorType>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [page, setPage] = useState<number>(1);\n  const [totalPages, setTotalPages] = useState<number>(0);\n  const { lang } = useLangState();\n  const isLoadingMore = useRef(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setError(null);\n        setIsLoading(true);\n\n        const resultsArr: MovieType[] = [];\n\n        for (let i = 0; i < page; i += 1) {\n          const data = await moviesAPI.getTrending({\n            language: lang,\n            page: i + 1,\n          });\n          if (!data) throw new Error(\"There is no fetched data.\");\n          resultsArr.push(...data.results);\n          // console.log(`Fetch operation for page ${i + 1}...`);\n        }\n\n        // Additional filter-operation to prevent response movie-items duplication inside main array:\n        setMovies((prevMovies) => {\n          // case of first fetch (component did mount):\n          if (prevMovies.length === 0) return resultsArr;\n\n          // case of ui-language change:\n          const uniqueResults = prevMovies.map((movie) => {\n            const newItem = resultsArr.find(({ id }) => id === movie.id);\n            return newItem ? newItem : movie;\n          });\n\n          return uniqueResults;\n        });\n        // console.log(\"Movies have been updated.\");\n      } catch (error) {\n        console.log(error);\n        const errorMessage: string =\n          lang === \"en-US\"\n            ? \"Something went wrong... Please, try again later.\"\n            : \"Щось пішло не так... Будь ласка, повторіть спробу пізніше.\";\n        setError(errorMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    const fetchMoreData = async () => {\n      try {\n        setError(null);\n        setIsLoading(true);\n\n        const data = await moviesAPI.getTrending({\n          language: lang,\n          page,\n        });\n\n        if (!data) throw new Error(\"There is no fetched data.\");\n\n        const { results, total_pages } = data;\n\n        setMovies((prevMovies) => {\n          // Additional filter-operation to prevent response movie-items duplication inside main array:\n          const filteredResults = results.filter((item) => {\n            return prevMovies.map(({ id }) => id).indexOf(item.id) === -1;\n          });\n\n          return [...prevMovies, ...filteredResults];\n        });\n\n        if (totalPages !== total_pages) setTotalPages(totalPages);\n      } catch (error) {\n        console.log(error);\n        const errorMessage: string =\n          lang === \"en-US\"\n            ? \"Something went wrong... Please, try again later.\"\n            : \"Щось пішло не так... Будь ласка, повторіть спробу пізніше.\";\n        setError(errorMessage);\n      } finally {\n        setIsLoading(false);\n        isLoadingMore.current = false;\n      }\n    };\n\n    // Determine which dependency array variable causes server request: 'loading more' operation or UI-language change.\n    isLoadingMore.current === false ? fetchData() : fetchMoreData();\n  }, [lang, page, totalPages]);\n\n  const handleLoadMore = () => {\n    isLoadingMore.current = true;\n    setPage((prevPage) => prevPage + 1);\n  };\n\n  const headingTextContent: string =\n    lang === \"en-US\" ? \"Popular movies\" : \"Популярні фільми\";\n\n  return (\n    <>\n      <Helmet>\n        <title>{lang === \"en-US\" ? \"Home\" : \"Головна\"}</title>\n      </Helmet>\n\n      <section className={css.section}>\n        <Container>\n          <h1 className={css.heading}>{headingTextContent}</h1>\n          {isLoading && <Spinner />}\n          {error && <FallbackView type=\"error\" message={error} />}\n          {!error && movies.length > 0 && (\n            <>\n              <MovieList movies={movies} />\n              {page !== totalPages && (\n                <LoadMoreBtn\n                  onLoadMore={handleLoadMore}\n                  isLoading={isLoading}\n                />\n              )}\n            </>\n          )}\n        </Container>\n      </section>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","page","setPage","_useState9","_useState10","totalPages","setTotalPages","lang","useLangState","isLoadingMore","useRef","useEffect","_ref","_ref3","current","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resultsArr","i","data","wrap","_context","prev","next","moviesAPI","getTrending","language","sent","Error","push","apply","_toConsumableArray","results","prevMovies","length","map","movie","newItem","find","_ref2","id","t0","console","log","finish","stop","arguments","fetchData","_callee2","total_pages","_context2","filteredResults","filter","item","_ref4","indexOf","concat","fetchMoreData","headingTextContent","_jsxs","_Fragment","children","_jsx","Helmet","className","css","Container","Spinner","FallbackView","type","message","MovieList","LoadMoreBtn","onLoadMore","prevPage"],"sourceRoot":""}